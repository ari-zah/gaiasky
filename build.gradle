import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
  id "com.install4j.gradle" version "8.0.5"
  id "com.dorongold.task-tree" version "1.5"
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '3.1.0'

    ext {
        appName = "GaiaSky"
        gdxVersion = "1.10.0"
        gdxcontrollersVersion = "2.1.0"
        lwjglVersion = "3.2.3"
        jcommanderVersion = "1.81"
        slf4jVersion = "1.7.25"
        sparkjavaVersion = "2.7.2"
        gsonVersion = "2.8.0"
        jafamaVersion = "2.1.0"
        compressVersion = "1.20"
        commonsioVersion = "2.6"
        commonsimagingVersion = "+"
        py4jVersion = "0.10.8.1"
        oshiVersion = "4.0.0"
        jsampVersion = "+"
        sdl2gdxVersion = "1.0.+"
        jsoupVersion = "1.13.1"
        apfloatVersion = "1.9.1"
    }

    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven{ url "https://repo1.maven.org/maven2/" }
        maven{ url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven{ url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":core") {
    apply plugin: "java-library"

    def cmd = "git describe --abbrev=0 --tags HEAD"
    def proc = cmd.execute()
    project.ext.tag = proc.text.trim()

    cmd = "git rev-parse --short HEAD"
    proc = cmd.execute()
    project.ext.rev = proc.text.trim()

    if (DefaultNativePlatform.currentOperatingSystem.windows) {
        project.ext.system = "Windows10 x86_64"
    } else {
        cmd = "uname -snmr"
        proc = cmd.execute()
        project.ext.system = proc.text.trim()
    }

    cmd = "whoami"
    proc = cmd.execute()
    project.ext.builder = proc.text.trim()

    project.ext.buildtime = new Date()

    version = "$tag"

    println ""
    println "CURRENT SYSTEM"
    println "=============="
    println "java version: " + JavaVersion.current().toString()
    println "system: $system"

    println ""
    println "GAIA SKY"
    println "========"
    println "git tag: $tag"
    println "git rev: $rev"
    println "buildtime: $buildtime"
    println "builder: $builder"
    println ""


    // Set some build variables
    project.ext.baseDir = System.getProperty("user.dir")
    project.ext.tagRev = project.tag + "." + project.rev
    project.ext.distName = "gaiasky-$tagRev"
    project.ext.releasesDir = "$baseDir/releases"
    project.ext.distDir = "$releasesDir/$distName"
    project.ext.packageName = "packages-$tagRev"
    project.ext.packageDir = "$releasesDir/$packageName"

    println ""
    println "BUILD VARIABLES AND INFO"
    println "========================"
    println "base dir: $baseDir"
    println "tag.rev: $tagRev"
    println "dist name: $distName"
    println "dist dir: $distDir"
    println "packages name: $packageName"
    println "packages dir: $packageDir"
    println ""

    tasks.withType(JavaCompile) { options.compilerArgs << "-parameters" }

    dependencies {
        // *****************************
        // GENERATE SKINS (PackTextures)
        // *****************************
        //api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"

        // ************
        // REGULAR DEPS
        // ************
        api group: "org.lwjgl", name: "lwjgl-openvr", version: "$lwjglVersion"
        api "org.lwjgl:lwjgl-openvr:$lwjglVersion:natives-linux"
        api "org.lwjgl:lwjgl-openvr:$lwjglVersion:natives-windows"
        api "org.lwjgl:lwjgl-openvr:$lwjglVersion:natives-macos"

        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        // gdx-controllers:2.+ bases up on SDL 2.0.12
        api "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxcontrollersVersion"
        api "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxcontrollersVersion"

        //api "org.astrogrid:jsamp:$jsampVersion"
        api group: "org.apfloat", name: "apfloat", version: "$apfloatVersion"


        // *****************
        // OTHER SERVER DEPS
        // *****************
        api group: "commons-io", name: "commons-io", version: "$commonsioVersion"
        api "org.apache.commons:commons-compress:$compressVersion"
        api "com.beust:jcommander:$jcommanderVersion"
        api "net.jafama:jafama:$jafamaVersion"
        
        api group: "net.sf.py4j", name: "py4j", version: "$py4jVersion"
        api group: "com.github.oshi", name: "oshi-core", version: "$oshiVersion"
        //api group: "org.astrogrid", name: "jsamp", version: "$jsampVersion"

        api group: "org.jsoup", name: "jsoup", version: "$jsoupVersion"
        api group: "org.apache.commons", name: "commons-imaging", version: "$commonsimagingVersion"

        // ****************
        // REST SERVER DEPS
        // ****************
        api "org.slf4j:slf4j-nop:$slf4jVersion"
        //api "org.slf4j:slf4j-simple:$slf4jVersion"
        api "com.sparkjava:spark-core:$sparkjavaVersion"
        api "com.google.code.gson:gson:$gsonVersion"
        api "junit:junit:4.12"

        // *************
        // INTERNAL DEPS
        // *************
        api files("lib/stil.jar")
        api files("lib/jsamp-1.3.7.jar")
        api files("../assets")
    }

    jar {
        manifest {
            attributes "Implementation-Title": "Gaia Sky",
            "Implementation-Version": archiveVersion
        }
        from("../assets") {
            include "font/main-font.fnt"
            include "font/main-font.png"
            include "font/font2d.fnt"
            include "font/font2d.png"
            include "font/font-titles.fnt"
            include "font/font-titles.png"
            include "icon/gs_icon.png"
            include "icon/gsvr_icon.png"
            include "icon/gsascii.txt"
            include "img/**"
            include "text/**"
            include "shader/**"
            include "data/**"
            include "shaders/**"
            include "skins/**"
            exclude "skins/raw"
            exclude "assets-bak/**"
        }
        from("build/classes/main") { include "**" }
    }

}

task createWrapper(type: Wrapper) { gradleVersion = "5.6.2" }
