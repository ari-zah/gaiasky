{"version":1,"ops":[{"type":3,"author":{"id":"96b0ca7cd30bb493310f134fed311141138b4461"},"timestamp":1479907826,"metadata":{"gitlab-id":"76472216"},"message":"Definitely an out of memory problem. Since each asteroid gets its own model object this might not be the best approach to get them into Gaia Sky.\nHowever, I did a quick test:\n\n1.  Increasing the max heap memory to 4 GB [here](https://github.com/ari-zah/gaiasky/blob/master/desktop/exe/gaiasky#L35) (or in the [windows launcher](https://github.com/ari-zah/gaiasky/blob/master/desktop/exe/gaiasky.bat#L5) or in the [gradle build file](https://github.com/ari-zah/gaiasky/blob/master/desktop/build.gradle#L31) depending on what you use to launch the app). \n2.  Relaxing a bit the number of samples per orbit [here](https://github.com/ari-zah/gaiasky/blob/master/core/src/gaia/cu9/ari/gaiaorbit/data/orbit/OrbitalParametersProvider.java#L31) — it actually depends on the length of the semi-major axis; the maximum number of samples was 500 per orbit, I reduced it to 200. \n3.  Choosing HYG instead of TGAS in the data tab to have more room for the asteroid orbits.\n\nWith these I could load all the orbits —see attached images— even though it kills the frame rate (I get about 1 FPS in a very old 8800 GTS). Probably decreasing the number of samples even further and using a decent graphics card would be enough to get interactive rates. I will need to do some testing.\n\nAbout the orientation, I will investigate further. Probably a simple extra parameter in the orbit file will suffice.\n\n![20161123_screenshot_00000](https://cloud.githubusercontent.com/assets/1049893/20563517/3f87acdc-b189-11e6-905c-e811a9506dfd.jpg)\n![20161123_screenshot_00001](https://cloud.githubusercontent.com/assets/1049893/20563522/43c9796a-b189-11e6-813d-b34899261787.jpg)\n![20161123_screenshot_00002](https://cloud.githubusercontent.com/assets/1049893/20563524/45db3b1c-b189-11e6-82df-9475e2cbb2c6.jpg)","files":null},{"type":3,"author":{"id":"96b0ca7cd30bb493310f134fed311141138b4461"},"timestamp":1479975210,"metadata":{"gitlab-id":"76472213"},"message":"Some more news.\nI toned down the colors a bit, used simple `GL_LINES` instead of the shaded quads mode (halves the number of vertices) and reduced the number of samples. The thing is now running at interactive rates (about 15 FPS with `glc-capture` on). \n\nThe lines don't look very good though because they overlap at different distances so it is impossible to sort them for proper alpha blend rendering unless we split them into parts, which would kill performance.\nSee this [unlisted Youtube video](https://www.youtube.com/watch?v=7i5V0ub-2DE). Sorry for the quality. Youtube encoding is horrible. Also, data cluttering is strong with this one.","files":null},{"type":3,"author":{"id":"96b0ca7cd30bb493310f134fed311141138b4461"},"timestamp":1480328416,"metadata":{"gitlab-id":"76472205"},"message":"As for the reference plane being Earth's equator instead of the ecliptic plane, the solution is already in place, as I suspected. We just need to add a new parameter `\"transformFunction\": \"equatorialToEcliptic\"` to the definition.\n\n#### Example\n```json\n{\n    \"name\": \"60 Echo\",\n    \"parent\": \"Sol\",\n    \"color\": [\n        0.5,\n        1.0,\n        0.5,\n        0.8\n    ],\n    \"orbit\": {\n        \"epoch\": 2457800.5,\n        \"meananomaly\": 355.66724,\n        \"semimajoraxis\": 357962687.0586,\n        \"eccentricity\": 0.1832334,\n        \"argofpericenter\": 270.99363,\n        \"ascendingnode\": 191.59609,\n        \"period\": 0.27411194928064958,\n        \"inclination\": 3.60148\n    },\n    \"provider\": \"gaia.cu9.ari.gaiaorbit.data.orbit.OrbitalParametersProvider\",\n    \"impl\": \"gaia.cu9.ari.gaiaorbit.scenegraph.Orbit\",\n    \"ct\": \"Orbits\",\n    \"transformFunction\": \"equatorialToEcliptic\"\n}\n```","files":null},{"type":3,"author":{"id":"96b0ca7cd30bb493310f134fed311141138b4461"},"timestamp":1480333995,"metadata":{"gitlab-id":"76472206"},"message":"Also, with commit 3bed8b8aace3b9c0d6c2f8628f42d44538f5f548 we can now have more than one visibility type (`ComponentType`) per object, so that asteroid orbits are only shown when both Asteroids and Orbits are active.\n\n#### Example\n\n```json\n{\n    \"name\": \"60 Echo\",\n    \"parent\": \"Sol\",\n    \"color\": [\n        0.5,\n        1.0,\n        0.5,\n        0.8\n    ],\n    \"orbit\": {\n        \"epoch\": 2457800.5,\n        \"meananomaly\": 355.66724,\n        \"semimajoraxis\": 357962687.0586,\n        \"eccentricity\": 0.1832334,\n        \"argofpericenter\": 270.99363,\n        \"ascendingnode\": 191.59609,\n        \"period\": 0.27411194928064958,\n        \"inclination\": 3.60148\n    },\n    \"provider\": \"gaia.cu9.ari.gaiaorbit.data.orbit.OrbitalParametersProvider\",\n    \"impl\": \"gaia.cu9.ari.gaiaorbit.scenegraph.Orbit\",\n    \"ct\": [ \"Orbits\", \"Asteroids\" ],\n    \"transformFunction\": \"equatorialToEcliptic\"\n}\n```","files":null},{"type":3,"author":{"id":"96b0ca7cd30bb493310f134fed311141138b4461"},"timestamp":1515403008,"metadata":{"gitlab-id":"76472277"},"message":"Finally closing this. Commit fe97f02abaa283f0cc2421941b392f87258d9a5c introduced a new orbit mode, VBO lines, which basically send all the line points to the GPU to do the work. This results in a boost in performance (20 vs 60 FPS with a GTX1070 for about 700 orbits). The full 7000 data file yields between 10 and 30 FPS  with the new method depending on how many line segments are in view.","files":null}]}